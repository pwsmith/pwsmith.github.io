I"d$<p>In a <a href="/2020/05/30/setting-up-a-text-editor-for-LaTeX/">previous post</a> I showed how one can set up Atom to use for writing LaTeX, and discussed a number of benefits of using an editor such as Atom over the one that is by default available.
This article discusses how to set up Microsoft’s Visual Studio Code.</p>

<h3 id="installation">Installation</h3>

<p>There are a wealth of options to download VS Code on <a href="https://code.visualstudio.com/download">the download page</a>.
On Windows and Mac it is a simple download and install.
For Linux, there is the option of either a .deb/.rpm file, or downloading through <a href="https://snapcraft.io">Snap</a>.
It’s also available on Arch based systems through pacman.</p>

<p>Once installed you are presented with the following screen. 
Whilst it works for writing text out of the box, you will want to install some extensions to cusomtise it for your own tastes.
These can be found in the extensions tab, where the red box is on the screenshot.
Alternatively press <code class="highlighter-rouge">C-shift-x</code>.</p>

<p><img src="/images/vscode/vscodewelcome.png" alt="vscode welcome" /></p>

<p>The extensions are part of the reason that VS Code is so popular for use in software development: there is a <em>huge</em> community that use it and make extensions for it.
You can search for extensions after clicking on the tab.</p>

<h3 id="recommended-packages">Recommended Packages</h3>

<h4 id="latex-workshop">LaTeX Workshop</h4>

<p>In contrast to Atom, you don’t need to add any language support for LaTeX in VS Code, so this is the only extension that you <em>really</em> need.
VS Code is oriented at being more than a text editor, and towards an Integrated Development Environment for programming. 
<a href="https://marketplace.visualstudio.com/vscode">LaTeX Workhop</a> very much follows in that regard, providing a lot of tools that you would need whilst writing.
Like <a href="/2020/05/30/setting-up-a-text-editor-for-LaTeX/">latex-tools for Atom</a>, it gives the option to compile the document from within the editor and has bibliography integration.
Not many commands are available by keybindings by default (though you can define your own keybindings):</p>

<ul>
  <li><code class="highlighter-rouge">C-alt-b</code>: compile the document.</li>
  <li><code class="highlighter-rouge">C-alt-j</code>: sync to pdf from cursor.</li>
</ul>

<p>However, you can open a tab on the left of the screen by clicking the TeX icon which provides much more:</p>

<p><img src="/images/vscode/vscworkshop-tools.png" alt="VSCode workshop tools" />
<em>Click the TeX logo on the left of the screen for a lot of useful tools.</em></p>

<p>Among these are options to build with luatex, select which viewer to view the pdf in (either a tab within VS Code, an external pdf viewer or within a web browser) and search for citations.
Citation support is not quite as seamless as with Atom.
By default, when you type <code class="highlighter-rouge">\cite{}</code> in Atom, the bibliography immediately opens.
In VS Code, this sort of happens in the sense that the Intellisense tab shows a list of citation keys that narrows down as you ttype, but you can’t search information about the citation itself.
You <em>can</em> do this, but you need to select <code class="highlighter-rouge">Open citation browser</code> under the <code class="highlighter-rouge">Miscellaneous</code> tab on the left.
This works, but is less seamless than in Atom, and you can only search by author name, which is not ideal.</p>

<p>One quite useful option is the <em>Snippet Panel</em>, which when clicked will open a tab on the right with symbols, which when selected will add in the relevant LaTeX code at your cursor in the document.
It’s mostly maths symbols, but also Greek letters and some latin symbols.</p>

<p><img src="/images/vscode/vscodesymbols.png" alt="Snippet Panel" />
<em>Click on the symbol you want and the code goes in.</em></p>

<p>One downside is that it’s not immediately obvious how to use XeLaTeX to compile, but luatex works just as well for me.</p>

<h4 id="insert-unicode">Insert Unicode</h4>

<p>This is more for writing linguistics papers.
As I’ve written about before, it is better to write directly in unicode for non-Latin and phonetic symbols rather than using, e.g. <code class="highlighter-rouge">tipa</code>.
I’ve nothing inherently against <code class="highlighter-rouge">tipa</code>, it works totally well for the output, but I find it difficult to read in the source, and you can’t reuse that example outside of LaTeX.</p>

<p>The problem with writing in unicode is that you need to know the right code, and there is a lot.
<a href="https://marketplace.visualstudio.com/items?itemName=brunnerh.insert-unicode">Insert Unicode</a> is a wonderful extension that allows you to search for characters by name or by code, and then select them to insert.
If you already the code, you don’t need this, but if you know which symbol to look for, it will save you the time to look it up online.
What is so nice about this extension, and here it has the edge over the equivalent in Atom, is that you can save your frequently used symbols in whatever way you like.</p>

<p><img src="/images/vscode/insertunicode.gif" alt="Insert Unicode" /></p>

<p>To save whichever you want, press <code class="highlighter-rouge">C-shift-P</code> to bring up the command pallette, and search for <em>Insert Unicode: Manage Favourites</em>, and you can use the GUI.
Alternatively you can edit the settings.json file with your desired structure.</p>

<h2 id="snippets">Snippets</h2>

<p>Unlike <em>latex-tools</em> for Atom, <em>Latex Workshop</em> does not define a large amount of snippets, which means that you will end up making your own.
VS Code stores snippets in <em>json</em> format.
As is common, the important elements for each snippet are the <strong>prefix</strong>, the <strong>body</strong> and the <strong>description</strong>.
Cursor positions are designated numerically after <code class="highlighter-rouge">$</code>, with <code class="highlighter-rouge">$1</code> denoting the first position, <code class="highlighter-rouge">$2</code> the second after pressing <code class="highlighter-rouge">tab</code> <em>etc</em>.
The <strong>scope</strong> of the snippet is handled automatically in VSCode, unlike in Atom, as each format has its own .json file.
Thus, your LaTeX snippets will be stored in the <em>latex.json</em> file.</p>

<p>To make a new snippet:</p>

<ol>
  <li>press <code class="highlighter-rouge">C-shift-p</code> and search for <em>Preferences: Configure User Snippets</em>.</li>
  <li>Select <em>latex.json</em> from the next menu.</li>
  <li>Write the snippet between the outer <code class="highlighter-rouge">{}</code> braces.</li>
</ol>

<p>Below is an example for inserting small caps.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"small caps"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"prefix"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sc"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"body"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="s2">"</span><span class="se">\\</span><span class="s2">textsc{$1}"</span><span class="p">,</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"adds small caps"</span><span class="w">
    </span><span class="p">},</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Be sure to make sure the commas are at the end of the lines.</p>

<h2 id="customising">Customising</h2>

<p>There is a <em>huge</em> amount that you can do with Visual Studio Code to set it up according to your own favourites.
<a href="https://dev.to/thegeoffstevens/50-vs-code-themes-for-2020-45cc">Top theme lists</a> are not hard to find online, and can usually be added through the VSCode Marketplace.</p>

<h2 id="altogether">Altogether</h2>

<p>VSCode is a brilliant piece of software.
Like Atom, it too is built on <a href="www.electronjs.org">Electron</a>, so it’s not exactly a lightweight program suitable for older computers, but an admireable amount of work has gone in to optimise it and reduce memory usage, so you shouldn’t have any problems on most computers.
Furthermore, it’s got some key functionality that Atom lacks.
When I write in LaTeX, I have to admit that I don’t tend to use the build options that the editor allows for.
That is, I wouldn’t build it using the options given above in <em>LaTeX Workshop</em>.
There’s no problem with it, I just prefer to compile from the terminal and use the editor for just snippet and bibliography integration.
It’s a personal choice, and it works for me.
VSCode is nice in this regard in that it includes a terminal within the editor, just press <code class="highlighter-rouge">C-shift-</code>`</p>

:ET